#!/bin/bash
#
if [[ $# == 2 ]]
then
    rg=$1
    days=$2
elif [[ $# == 1 ]]
then
    rg=$1
else
    echo "Usage: $0 rgId days"
    exit 1
fi

datelist='{'
for((i=days;i>0;i--))
do
        day=$(date +'.%Y%m%d*,' -d"$i day ago")
        datelist="$datelist$day"
        from_day=$(date +'%Y%m%d' -d"$i day ago")
done
datelist="${datelist}$(date +'.%Y%m%d*,}')"
datenow=$(date '+%Y%m%d')
dump_data=dump_data.${datenow}
echo "dump log from $from_day to $datenow to $dump_data"

echo viprexec -i -c "zgrep -h 'This\|candidateCount' /var/log/blobsvc-chunk-reclaim.log${datelist}"
#viprexec -i -c "zgrep -h 'This\|candidateCount' /var/log/blobsvc-chunk-reclaim.log${datelist}" > ${dump_data}
zgrep "This\|candidateCount" /root/dump_data.dat > $dump_data

grep "REPO_SCAN" ${dump_data} | grep candidateCount > candidateCount.log
grep "REPO_SCAN" ${dump_data} | grep This > roundEnd.log

for((index=0;index<128;index++))
do
    ob="OB_${index}_128_0:"
    grep "${rg}_${ob}" candidateCount.log | grep Saving | tail -n 1 > result.log.${index}
    grep "${rg}_${ob}" roundEnd.log | grep round | tail -n 1 >> result.log.${index}
    eval $( awk '/ChunkReferenceScanner.java/{
                    for(i=1;i<=NF;i++){
                        if($i=="candidateCount"){
                            candidateCount=$(i+1);
                        } else if($i=="failedCandidateCount"){
                            failedCandidateCount=$(i+1);
                        } else if($i=="lastTaskTime"){
                            lastTaskTime=$(i+1);
                        }
                    }
                }
                /RepoChunkReferenceScanner.java/{
                    for(i=1;i<=NF;i++){
                        if($i=="milliseconds") {
                            roundtime=substr($1,index($1,":")+1,19);
                            duration=$(i-1);
                        }
                    }
                }
            END{
                printf "candidateCount=%d;failedCandidateCount=%d;lastTaskTime=%d\n",candidateCount,failedCandidateCount,lastTaskTime;
                printf "lastEndtime=%s;lastDuration=%s\n",roundtime,duration;
            }' result.log.${index} )
    printf "%13s candidateCount %9s, failedCandidateCount %6s, lastTaskTime %13s, lastEndtime %19s, lastDuration %11s\n"\
           $ob $candidateCount $failedCandidateCount $lastTaskTime $lastEndtime $lastDuration
    rm -f result.log.${index}
done > GCVerificationAnalysis.log.${datenow}.${rg}
rm -f ${dump_data}

