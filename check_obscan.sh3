#!/bin/bash
#
#

print_usage()
{
    echo "Usage: $0 rgId [date]"
    exit 1
}


if [[ $# == 2 ]]
then
    rg=$1
    datenow=$2
elif [[ $# == 1 ]]
then
    rg=$1
    datenow=$(date '+%Y%m%d')
else
    print_usage
fi

dump_data=dump_raw_data.${datenow}
zgrep "This\|candidateCount" /root/dump_data.dat > $dump_data
#viprexec -i -c 'zgrep "This\|candidateCount" /var/log/blobsvc-chunk-reclaim.log.2017{1129,1130,1201}* /var/log/blobsvc-chunk-reclaim.log' > ${dump_data}
grep "REPO_SCAN" ${dump_data} | grep candidateCount > candateCount.log
grep "REPO_SCAN" ${dump_data} | grep This > roundEnd.log

for((i=0;i<128;i++))
do
    ob="OB_${i}_128_0:"
	grep "${rg}_OB_${i}_128_0" candidateCount.log | grep Saving | tail -n 1 > candateCount.log.${i}
	grep "${rg}_OB_${i}_128_0" roundEnd.log | grep round | tail -n 1 > roundEnd${i}
    eval $( awk -v urn="${rg}_${ob}" '$2~"REPO_SCAN"{
								if($7=="Saving" && $11~urn && $12=="candidateCount"){
                                    candidateCount=$13;
									failedCandidateCount=$15;
									lastTaskTime=$17;
								}
								else if($8=="This" && $9=="round" && $13~urn){
								    roundtime=substr($1,index($1,":")+1,19);
									duration=$17;
								}
	                        }
							END{
							    printf "candidateCount=%d;failedCandidateCount=%d;lastTaskTime=%d\n",candidateCount,failedCandidateCount,lastTaskTime;
								printf "lastEndtime=%s;lastDuration=%s\n",roundtime,duration;
							}
							' ${dump_data} )
	printf "%13s candidateCount %9s, failedCandidateCount %6s, lastTaskTime %13s, lastEndtime %19s, lastDuration %11s\n"\
	       $ob $candidateCount $failedCandidateCount $lastTaskTime $lastEndtime $lastDuration
done > GCVerificationAnalysis.log.${datenow}.${rg}
#rm ${dump_data}

